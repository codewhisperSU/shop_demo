{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"CustomerDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Customer": {
				"properties": {
					"name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CustomerListDto": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Customer"
						},
						"type": "array"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"unit_price": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"unit_price"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Product": {
				"properties": {
					"name": {
						"type": "string"
					},
					"unit_price": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"unit_price"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductListDto": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Product.Exclude_keyofProduct.unit_price__": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Product.unit_price_": {
				"$ref": "#/components/schemas/Pick_Product.Exclude_keyofProduct.unit_price__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"PurchaseDto": {
				"properties": {
					"customerName": {
						"type": "string"
					},
					"products": {
						"items": {
							"$ref": "#/components/schemas/Omit_Product.unit_price_"
						},
						"type": "array"
					}
				},
				"required": [
					"customerName",
					"products"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Product.Exclude_keyofProduct.id__": {
				"properties": {
					"unit_price": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"unit_price",
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Product.id_": {
				"$ref": "#/components/schemas/Pick_Product.Exclude_keyofProduct.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"PurchasePerCustomerProduct": {
				"properties": {
					"purchaseDate": {
						"type": "string",
						"format": "date-time"
					},
					"customerName": {
						"type": "string"
					},
					"customerAddress": {
						"type": "string"
					},
					"purchaseProduct": {
						"items": {
							"$ref": "#/components/schemas/Omit_Product.id_"
						},
						"type": "array"
					}
				},
				"required": [
					"purchaseDate",
					"customerName",
					"customerAddress",
					"purchaseProduct"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PurchaseListDto": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/PurchasePerCustomerProduct"
						},
						"type": "array"
					}
				},
				"required": [
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Customer.Exclude_keyofCustomer.id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"address": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"address"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Customer.id_": {
				"$ref": "#/components/schemas/Pick_Customer.Exclude_keyofCustomer.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"CustomerAndProductListDto": {
				"properties": {
					"customer": {
						"items": {
							"$ref": "#/components/schemas/Omit_Customer.id_"
						},
						"type": "array"
					},
					"product": {
						"items": {
							"$ref": "#/components/schemas/Omit_Product.id_"
						},
						"type": "array"
					}
				},
				"required": [
					"customer",
					"product"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "shop_demo",
		"version": "1.0.0",
		"description": "This is shop demo",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Sami Ukkonen ",
			"email": "sami.ukkonen@gmail.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/customer/add": {
			"post": {
				"operationId": "AddCustomer",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomerDto"
							}
						}
					}
				}
			}
		},
		"/customer/list": {
			"get": {
				"operationId": "GetCustomerList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomerListDto"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/product/add": {
			"post": {
				"operationId": "AddProduct",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProductDto"
							}
						}
					}
				}
			}
		},
		"/product/list": {
			"get": {
				"operationId": "GetProductList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProductListDto"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/purchase/add": {
			"post": {
				"operationId": "AddPurchase",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PurchaseDto"
							}
						}
					}
				}
			}
		},
		"/purchase/list": {
			"get": {
				"operationId": "GetPurchaseList",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PurchaseListDto"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/search/{name}": {
			"get": {
				"operationId": "SearchCustomerOrProductByName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomerAndProductListDto"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}